#!/home/clay/miniconda3/envs/codeing/bin/python
# -*- encoding: utf-8 -*-
'''
@File    :   PPSID
@Time    :   2022/12/22 01:18:52
@Author  :   Xiannhui Zhou
@Version :   1.0
@Contact :   zhou_xiannhui@163.com
'''

# here import the need moudle
import click
from src.get_gene_data import get_gene_data
from src.get_region import get_region
from src.get_exon import exon_create
from src.del_utr import combine_exon
from src.get_orf import get_orf
from src.get_motif import get_condition
from src.get_type import get_pos
from src.out_summary import out_orf_summary, out_gene_summary
from src.get_gene_seq import get_gene_seq
from src.out_design import out_design
import os


@click.group()
def cli():
    pass


# region(创建summmary'命令)


@click.command()

# region(定义参数)


@click.option(
    '-f',
    '--genome',
    type=click.Path(exists=True, file_okay=True),
    help='Select the genome file. ',
    required=True,
)  # 选择基因组文件,同时检查文件是否存在以及是否为文件，同时必须输入
@click.option(
    '-g',
    '--gff',
    type=click.Path(exists=True, file_okay=True),
    help='Select the gff file. ',
    required=True,
)  # 选择gff文件,同时检查文件是否存在以及是否为文件，同时必须输入
@click.option(
    '-if',
    'isfasta',
    type=bool,
    default=False,
    help='runing in the orf mode',
)
@click.option(
    '-r',
    '--region',
    type=str,
    default='default',
    show_default=True,
    help='Set the design area.',
)  # 设置设计区域，默认为default
@click.option(
    '-m',
    '--motif',
    type=click.Path(exists=True, file_okay=True),
    help='Set the motif sequence.',
)
@click.option(
    '-o',
    '--output',
    type=str,
    default='hg38',
)
def summary(genome, gff, isfasta, region, motif, output):
    # click.echo(f'{genome}, {gff}, {region}, {motif}, {output}')
    condition = get_condition(motif)
    if isfasta is True:
        gene_data = get_orf(genome)
        gene_data.to_pickle('gene_data.pkl')
        get_pos(gene_data, condition[0])
        out_orf_summary(output, gene_data, condition[0])
    else:
        gene_data = get_gene_data(genome, gff)
        if region != 'default':
            gene_data = get_region(gene_data, region)
        gene_exon = exon_create(gene_data)
        gene_id_name = combine_exon(gene_data)
        gene_exon.to_pickle('gene_exon.pkl')
        gene_id_name.to_pickle('gene_id_name.pkl')
        get_pos(gene_exon, condition[0])
        get_pos(gene_id_name, condition[0])
        out_gene_summary(output, gene_exon, gene_id_name, condition[0])
    return 1
    # gene_data.to_pickle('gene_id_name.pkl')
    # condition = get_condition(motif)
    # gene_infor = get_type(gene_data, condition[0], condition[1])
    # out_summary(output, gene_infor, genome, gff, region, motif, condition[0])
    # return 1


@click.command()
@click.option(
    '-in',
    '--seq',
    type=click.Path(file_okay=True),
    default='gene_seq.pkl',
    help='Select the genome file. ',
    required=True,
)
@click.option(
    '-if',
    '--isfasta',
    type=bool,
    default=False,
    help='runing in the orf mode',
)
@click.option(
    '-m',
    '--motif',
    type=click.Path(exists=True, file_okay=True),
    help='Select the gff file. ',
    required=True,
)
@click.option(
    '-o',
    '--output',
    type=str,
    default='hg38',
)
def design(seq, isfasta, motif, output):
    # click.echo(f'{seq}, {isfasta}, {motif}, {output}')
    gene_seq = get_gene_seq(seq, isfasta)
    condition = get_condition(motif)
    out_design(gene_seq, condition[2], isfasta, output)


@click.command()
@click.option(
    '-in',
    '--input',
    type=str,
    default='fly',
    help='Input file prefix',
    required=True,
)
def visual(input):
    os.system(f'Rscript src/visual.R {input}')


# region(将命令添加到命令组)
cli.add_command(summary)
cli.add_command(design)
cli.add_command(visual)

if __name__ == '__main__':
    cli()
